quarkus.http.port=8084

quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql

keycloak.admin.auth-url=${OIDC_AUTH_URL:http://localhost:9090/realms/myrealm}
quarkus.oidc.auth-server-url=${keycloak.admin.auth-url}
quarkus.oidc.client-id=${OIDC_AUTH_CLIENT_ID:botmanager}
quarkus.oidc.roles.role-claim-path=resource_access/${quarkus.oidc.client-id}/roles

# Configure the incoming RabbitMQ queue `post-requests`
mp.messaging.incoming.post-analysis.connector=smallrye-rabbitmq
mp.messaging.incoming.post-analysis.queue.name=post-analysis
mp.messaging.incoming.post-analysis.exchange.name=post-analysis

# Configure the outgoing RabbitMQ exchange `post-analyzed`
mp.messaging.outgoing.post-analyzed.connector=smallrye-rabbitmq
mp.messaging.outgoing.post-analyzed.exchange.name=post-analyzed

%dev.quarkus.hibernate-orm.log.sql=false
%dev.quarkus.log.category."io.github.jelilio".level=DEBUG
%dev.quarkus.log.category."io.github.jelilio".min-level=TRACE

%dev.rabbitmq-host=${RBMQ_HOST}
%dev.rabbitmq-port=${RBMQ_PORT}
%dev.rabbitmq-username=${RBMQ_USER}
%dev.rabbitmq-password=${RBMQ_PWD}

# configure your datasource
%dev.quarkus.datasource.db-kind=${DB_KIND}
%dev.quarkus.datasource.username=${PG_DB_USER}
%dev.quarkus.datasource.password=${PG_DB_PWD}
%dev.quarkus.datasource.jdbc.url=${PG_DB_URL}
%dev.quarkus.datasource.jdbc.max-size=${PG_DB_MAX_SIZE}

%dev.quarkus.hibernate-orm.database.generation=${PG_DB_GEN}

%dev.quarkus.redis.hosts=${REDIS_URL}

